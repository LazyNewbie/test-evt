syntax = "proto3";
package exads.schema.events;
option go_package ="main/adevent";
option php_namespace="Exads\\Common\\Schema\\Events";
option php_metadata_namespace = "Exads\\Common\\GPBMetadata";


// reserved


/**
* 1. Read this documentation https://protobuf.dev/programming-guides/proto3/ 
* 2. DO NOT reuse indexes and DON'T just delete them. Use "reserved" key instead @see 
*/

enum AdEventType{
	Unspecified = 0;
	Impression = 1;
	Click = 2;
	Goal = 3;
	VideoView = 4;
	VideoHit = 5;
	Rtb = 6;
	Wpn = 7;
	AdRequest = 8;
}


message AdEvent {
    int64 date_int=1;
    uint64 time=2;
    string country=3;
    int32 idlanguage=4;
    string site_hostname=5;
    int32 idadvertiser=6;
    int32 idpublisher=7;
    int32 idsite=8;
    int32 idzone=9;
    int32 idcategory=10;
    int32 idcampaign=11;
    int32 idvariation=12;
    int32 idos=13;
    int32 idbrowser=14;
    int32 iddevice=15;
    int32 idcarrier=16;
    int32 idisp=17;
    int32 sub=18;
    float value=19;
    int32 publisher_rate=20;
    string publisher_currency=21;
    string campaign_currency=22;
    float exchange_to_publisher=23;
    float exchange_to_network=24;
    int32 ad_type=25;
    string format=26;
    int32 idnetwork=27;
    int32 impression_status=28;
    int32 impression_invalid_reason=29;
    int32 adblock=30;
    int32 idoffer=31;
    int32 idlanding_page=32;
    int32 position=33;
    int32 region_geoname_id=34;
    int32 idpartner=35;
    int32 click_status=36;
    string click_invalid_reason=37;
    int32 click_all_invalid_reasons=38;
    string idgoal=39;
    int32 rtb_total_time=40;
    float rtb_content_size=41;
    string bid_status=42;
    string error_reason=43;
    bool rtb_query_status=44;
    float rtb_value=45;
    int32 rtb_request_type=46;
    int32 event_type=47;
    string user_ip=48;
    string country_original=49;
    string http_x_forwarded_for=50;
    int32 idproduct_category=51;
    int32 pricing_model=52;
    int32 https=53;
    string screen_resolution=54;
    string user_id=55;
    string url_hash=56;
    string referer_site_hostname=57;
    float execution_time=58;
    int32 video_event=59;
    int32 errorcode=60;
    string imp_id=61;
    string bid_id=62;
    int32 http_code=63;
    int32 idcarrier_source=64;
    int32 noscript=65;
    int32 incognito_mode=66;
    int32 test_mode=67;
    int32 city_geoname_id=68;
    int32 is_trusted_proxy=69;
    int32 iddatacenter=70;
    string adblock_ver=71;
    int32 clickx=72;
    int32 clicky=73;
    string container_resolution=74;
    int32 impression_all_invalid_reasons=75;
    string netacuity_proxy_description=76;
    string netacuity_proxy_type=77;
    float eur_to_usd=78;
    int32 wpn_event=79;
    int32 email_status=80;
    int32 sub2=81;
    int32 sub3=82;
    string script_type=83;
    string script_name=84;
    string script_ver=85;
    int32 browser_ver=86;
    int32 vr=87;
    int32 internal=88;
    int32 sampling=89;
    int32 no_funds=90;
    int32 idresponsive_layout=91;
    int32 idmultizone=92;
    int32 email_isp=93;
    int32 script_detail=94;
    int32 script_version=95;
    float conversion_value_eur=96;
    float conversion_value_usd=97;
    int32 idadvertiser_ad_type=98;
    int32 idproxy=99;
    int32 ad_request_result=100;
    int32 idnetwork_type=101;
    string rtb_inventory_id=102;
    string rtb_inventory_name=103;
    int32 idcampaign_type=104;
    int32 refresh_iteration=105;
    int32 key_value_1=106;
    int32 key_value_2=107;
    int32 key_value_3=108;
    int32 key_value_4=109;
    int32 key_value_5=110;
    int32 key_value_6=111;
    int32 key_value_7=112;
    int32 key_value_8=113;
    int32 key_value_9=114;
    int32 key_value_10=115;
    int32 cdn_usage=116;
    float bid_shading_value=117;
    float second_best_value=118;
    float auction_floor=119;
    float auction_ceil=120;
    int32 idtraffic_source=121;
    int32 fallback_position=122;
    string ad_serving_host=123;
    int32 idrtb_error_reason=124;
    int32 client_hints_usage=125;
    string custom_value_1=126;
    string custom_value_2=127;
    string custom_value_3=128;
}


/*
Event{
		Date:                      eventData["aa"].(int32),             date_int
		Language:                  eventData["ad"].(int32),             idlanguage
		Advertiser:                eventData["af"].(int64),             idadvertiser
		Publisher:                 eventData["ag"].(int64),             idpublisher
		Site:                      eventData["ah"].(int64),             idsite
		Zone:                      eventData["ai"].(int64),             idzone
		Category:                  eventData["aj"].(int32),             idcategory
		Campaign:                  eventData["ak"].(int64),             idcampaign
		Variation:                 eventData["al"].(int64),             idvariation
		OS:                        eventData["am"].(int32),             idos
		Browser:                   eventData["an"].(int32),             idbrowser
		Device:                    eventData["ao"].(int32),             iddevice
		Carrier:                   eventData["ap"].(int32),             idcarrier
		ISP:                       eventData["aq"].(int32),             idisp
		Sub:                       eventData["ar"].(int64),             sub
		Sub2:                      eventData["dc"].(int64),             sub2
		Sub3:                      eventData["dd"].(int64),             sub3
		PublisherRate:             eventData["at"].(int32),             publisher_rate
		AdType:                    eventData["ay"].(int32),             ad_type
		Network:                   eventData["ba"].(int32),             idnetwork
		ImpressionsStatus:         eventData["bb"].(int32),             impression_status
		ImpressionInvalidReason:   eventData["bc"].(int32),             impression_invalid_reason
		AdBlock:                   eventData["bd"].(int32),             adblock
		Offer:                     eventData["be"].(int64),             idoffer
		LandingPage:               eventData["bf"].(int64),             idlanding_page
		Position:                  eventData["bg"].(int32),             position
		RegionGeonameID:           eventData["bh"].(int64),             region_geoname_id
		Partner:                   eventData["bi"].(int32),             idpartner
		ClickStatus:               eventData["bj"].(int32),             click_status
		RtbToalTime:               eventData["bn"].(int64),             rtb_total_time
		RtbRequestType:            eventData["bt"].(int32),             rtb_request_type
		Type:                      eventData["bu"].(int32),             event_type
		CityGeonameID:             eventData["cp"].(int32),             city_geoname_id
		ClickAllInvalidReasons:    eventData["bl"].(int32),             click_all_invalid_reasons
		ClickX:                    eventData["ct"].(int32),             clickx
		ClickY:                    eventData["cu"].(int32),             clicky
		ErrorCode:                 eventData["ch"].(int32),             errorcode
		HTTPCode:                  eventData["ck"].(int32),             http_code
		HTTPS:                     eventData["ca"].(int32),             https
		CarrierSource:             eventData["cl"].(int32),             idcarrier_source
		Datacenter:                eventData["cr"].(int32),             iddatacenter
		ProductCategory:           eventData["by"].(int32),             idproduct_category
		IncognitoMode:             eventData["cn"].(int32),             incognito_mode
		TrustedProxy:              eventData["cq"].(int32),             is_trusted_proxy
		NoScript:                  eventData["cm"].(int32),             noscript
		PricingModel:              eventData["bz"].(int32),             pricing_model
		TestMode:                  eventData["co"].(int32),             test_mode
		VideoEvent:                eventData["cg"].(int32),             video_event
		WpnEvent:                  eventData["da"].(int32),             wpn_event
		EmailStatus:               eventData["db"].(int32),             email_status
		IdClientHints:             eventData["eu"].(int32),             client_hints_usage
		Time:                      eventData["ab"].(int64),             time
		Value:                     eventData["as"].(float64),           value
		Exchange2Publisher:        eventData["aw"].(float64),           exchange_to_publisher
		Exchange2Network:          eventData["ax"].(float64),           exchange_to_network
		ExchangeEUR2USD:           eventData["cz"].(float64),           eur_to_usd
		RtbContentSize:            eventData["bo"].(float64),           rtb_content_size
		RtbValue:                  eventData["bs"].(float64),           rtb_value
		ExecutionTime:             eventData["cf"].(float64),           execution_time
		ConversionValueEUR:        eventData["dr"].(float64),           conversion_value_eur
		ConversionValueUSD:        eventData["ds"].(float64),           conversion_value_usd
		Country:                   eventData["ac"].(string),            country
		SiteHostname:              eventData["ae"].(string),            site_hostname
		PublisherCurrency:         eventData["au"].(string),            publisher_currency
		CampaignCurrency:          eventData["av"].(string),            campaign_currency
		AdFormat:                  eventData["az"].(string),            format
		ClickInvalidReason:        eventData["bk"].(string),            click_invalid_reason
		Goal:                      eventData["bm"].(string),            idgoal
		BidStatus:                 eventData["bp"].(string),            bid_status
		ErrorReason:               eventData["bq"].(string),            error_reason
		AdblockVersion:            eventData["cs"].(string),            adblock_ver
		BidID:                     eventData["cj"].(string),            bid_id
		ContainerResolution:       eventData["cv"].(string),            container_resolution
		CountryOriginal:           eventData["bw"].(string),            country_original
		HTTPXForwarderFor:         eventData["bx"].(string),            http_x_forwarded_for
		ImpID:                     eventData["ci"].(string),            imp_id
		NetacuityProxyDescription: eventData["cx"].(string),            netacuity_proxy_description
		NetacuityProxyType:        eventData["cy"].(string),            netacuity_proxy_type
		RefererSiteHostname:       eventData["ce"].(string),            referer_site_hostname
		ScreenResolution:          eventData["cb"].(string),            screen_resolution
		URLHash:                   eventData["cd"].(string),            url_hash
		UserID:                    eventData["cc"].(string),            user_id
		UserIP:                    eventData["bv"].(string),            user_ip
		ScriptType:                eventData["de"].(string),            script_type
		ScriptName:                eventData["df"].(string),            script_name
		ScriptVer:                 eventData["dg"].(string),            script_ver
		RtbInventoryId:            eventData["dx"].(string),            rtb_inventory_id
		RtbInventoryName:          eventData["dy"].(string),            rtb_inventory_name
		AdServingHost:             eventData["es"].(string),            ad_serving_host
		CustomValue1:              eventData["ev"].(string),            custom_value_1
		CustomValue2:              eventData["ew"].(string),            custom_value_2
		CustomValue3:              eventData["ex"].(string),            custom_value_3
		BrowserVer:                eventData["dh"].(int32),             browser_ver
		EmailISP:                  eventData["do"].(int32),             email_isp
		VR:                        eventData["di"].(int32),             vr
		Internal:                  eventData["dj"].(int32),             internal
		Sampling:                  eventData["dk"].(int32),             sampling
		NoFunds:                   eventData["dl"].(int32),             no_funds
		RtbQueryStatus:            eventData["br"].(bool),              rtb_query_status
		ResponsiveLayout:          eventData["dm"].(int32),             idresponsive_layout
		MultiZone:                 eventData["dn"].(int32),             idmultizone
		ScriptDetail:              eventData["dp"].(int32),             script_detail
		ScriptVersion:             eventData["dq"].(int32),             script_version
		IdadvertiserAdType:        eventData["dt"].(int32),             idadvertiser_ad_type
		Proxy:                     eventData["du"].(int32),             idproxy
		AdRequestResult:           eventData["dv"].(int32),             ad_request_result
		TrafficType:               eventData["dw"].(int32),             idnetwork_type
		TrafficSource:             eventData["eq"].(int32),             idtraffic_source
		FallbackPosition:          eventData["er"].(int32),             fallback_position
		IdCampaignType:            eventData["dz"].(int32),             idcampaign_type
		RefreshIteration:          eventData["ea"].(int32),             refresh_iteration
		KeyValue1:                 eventData["eb"].(int32),             key_value_1
		KeyValue2:                 eventData["ec"].(int32),             key_value_2
		KeyValue3:                 eventData["ed"].(int32),             key_value_3
		KeyValue4:                 eventData["ee"].(int32),             key_value_4
		KeyValue5:                 eventData["ef"].(int32),             key_value_5
		KeyValue6:                 eventData["eg"].(int32),             key_value_6
		KeyValue7:                 eventData["eh"].(int32),             key_value_7
		KeyValue8:                 eventData["ei"].(int32),             key_value_8
		KeyValue9:                 eventData["ej"].(int32),             key_value_9
		KeyValue10:                eventData["ek"].(int32),             key_value_10
		IdRtbErrorReason:          eventData["et"].(int32),             idrtb_error_reason
		CdnUsage:                  eventData["el"].(int64),             cdn_usage
		BidShadingValue:           eventData["em"].(float32),           bid_shading_value
		SecondBestValue:           eventData["en"].(float32),           second_best_value
		AuctionFloor:              eventData["eo"].(float32),           auction_floor
		AuctionCeil:               eventData["ep"].(float32),           auction_ceil
		Raw:                       eventData,
	}





Array
(
    [impression_all_invalid_reasons] => "cw"
)


*/