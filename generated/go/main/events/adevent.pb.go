// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: adevent.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdEventType int32

const (
	AdEventType_Unspecified AdEventType = 0
	AdEventType_Impression  AdEventType = 1
	AdEventType_Click       AdEventType = 2
	AdEventType_Goal        AdEventType = 3
	AdEventType_VideoView   AdEventType = 4
	AdEventType_VideoHit    AdEventType = 5
	AdEventType_Rtb         AdEventType = 6
	AdEventType_Wpn         AdEventType = 7
	AdEventType_AdRequest   AdEventType = 8
)

// Enum value maps for AdEventType.
var (
	AdEventType_name = map[int32]string{
		0: "Unspecified",
		1: "Impression",
		2: "Click",
		3: "Goal",
		4: "VideoView",
		5: "VideoHit",
		6: "Rtb",
		7: "Wpn",
		8: "AdRequest",
	}
	AdEventType_value = map[string]int32{
		"Unspecified": 0,
		"Impression":  1,
		"Click":       2,
		"Goal":        3,
		"VideoView":   4,
		"VideoHit":    5,
		"Rtb":         6,
		"Wpn":         7,
		"AdRequest":   8,
	}
)

func (x AdEventType) Enum() *AdEventType {
	p := new(AdEventType)
	*p = x
	return p
}

func (x AdEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_adevent_proto_enumTypes[0].Descriptor()
}

func (AdEventType) Type() protoreflect.EnumType {
	return &file_adevent_proto_enumTypes[0]
}

func (x AdEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdEventType.Descriptor instead.
func (AdEventType) EnumDescriptor() ([]byte, []int) {
	return file_adevent_proto_rawDescGZIP(), []int{0}
}

type RtbType int32

const (
	RtbType_UnspecifiedRtbType RtbType = 0
	RtbType_Advertiser         RtbType = 1
	RtbType_Publisher          RtbType = 2
)

// Enum value maps for RtbType.
var (
	RtbType_name = map[int32]string{
		0: "UnspecifiedRtbType",
		1: "Advertiser",
		2: "Publisher",
	}
	RtbType_value = map[string]int32{
		"UnspecifiedRtbType": 0,
		"Advertiser":         1,
		"Publisher":          2,
	}
)

func (x RtbType) Enum() *RtbType {
	p := new(RtbType)
	*p = x
	return p
}

func (x RtbType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RtbType) Descriptor() protoreflect.EnumDescriptor {
	return file_adevent_proto_enumTypes[1].Descriptor()
}

func (RtbType) Type() protoreflect.EnumType {
	return &file_adevent_proto_enumTypes[1]
}

func (x RtbType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RtbType.Descriptor instead.
func (RtbType) EnumDescriptor() ([]byte, []int) {
	return file_adevent_proto_rawDescGZIP(), []int{1}
}

type WpnEventType int32

const (
	WpnEventType_UnspecifiedWpnEvtType WpnEventType = 0
	WpnEventType_Subscriptions         WpnEventType = 1
	WpnEventType_Unsubscriptions       WpnEventType = 2
	WpnEventType_Sent                  WpnEventType = 3
)

// Enum value maps for WpnEventType.
var (
	WpnEventType_name = map[int32]string{
		0: "UnspecifiedWpnEvtType",
		1: "Subscriptions",
		2: "Unsubscriptions",
		3: "Sent",
	}
	WpnEventType_value = map[string]int32{
		"UnspecifiedWpnEvtType": 0,
		"Subscriptions":         1,
		"Unsubscriptions":       2,
		"Sent":                  3,
	}
)

func (x WpnEventType) Enum() *WpnEventType {
	p := new(WpnEventType)
	*p = x
	return p
}

func (x WpnEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WpnEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_adevent_proto_enumTypes[2].Descriptor()
}

func (WpnEventType) Type() protoreflect.EnumType {
	return &file_adevent_proto_enumTypes[2]
}

func (x WpnEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WpnEventType.Descriptor instead.
func (WpnEventType) EnumDescriptor() ([]byte, []int) {
	return file_adevent_proto_rawDescGZIP(), []int{2}
}

type AdEventRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	DateInt                     int32                  `protobuf:"varint,1,opt,name=date_int,json=dateInt,proto3" json:"date_int,omitempty"`
	Time                        int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Country                     string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Idlanguage                  uint32                 `protobuf:"varint,4,opt,name=idlanguage,proto3" json:"idlanguage,omitempty"`
	SiteHostname                string                 `protobuf:"bytes,5,opt,name=site_hostname,json=siteHostname,proto3" json:"site_hostname,omitempty"`
	Idadvertiser                int64                  `protobuf:"varint,6,opt,name=idadvertiser,proto3" json:"idadvertiser,omitempty"`
	Idpublisher                 int64                  `protobuf:"varint,7,opt,name=idpublisher,proto3" json:"idpublisher,omitempty"`
	Idsite                      int64                  `protobuf:"varint,8,opt,name=idsite,proto3" json:"idsite,omitempty"`
	Idzone                      int64                  `protobuf:"varint,9,opt,name=idzone,proto3" json:"idzone,omitempty"`
	Idcategory                  uint32                 `protobuf:"varint,10,opt,name=idcategory,proto3" json:"idcategory,omitempty"`
	Idcampaign                  int64                  `protobuf:"varint,11,opt,name=idcampaign,proto3" json:"idcampaign,omitempty"`
	Idvariation                 int64                  `protobuf:"varint,12,opt,name=idvariation,proto3" json:"idvariation,omitempty"`
	Idos                        uint32                 `protobuf:"varint,13,opt,name=idos,proto3" json:"idos,omitempty"`
	Idbrowser                   uint32                 `protobuf:"varint,14,opt,name=idbrowser,proto3" json:"idbrowser,omitempty"`
	Iddevice                    uint32                 `protobuf:"varint,15,opt,name=iddevice,proto3" json:"iddevice,omitempty"`
	Idcarrier                   uint32                 `protobuf:"varint,16,opt,name=idcarrier,proto3" json:"idcarrier,omitempty"`
	Idisp                       uint32                 `protobuf:"varint,17,opt,name=idisp,proto3" json:"idisp,omitempty"`
	Sub                         uint32                 `protobuf:"varint,18,opt,name=sub,proto3" json:"sub,omitempty"`
	Value                       float64                `protobuf:"fixed64,19,opt,name=value,proto3" json:"value,omitempty"`
	PublisherRate               int32                  `protobuf:"varint,20,opt,name=publisher_rate,json=publisherRate,proto3" json:"publisher_rate,omitempty"`
	PublisherCurrency           string                 `protobuf:"bytes,21,opt,name=publisher_currency,json=publisherCurrency,proto3" json:"publisher_currency,omitempty"`
	CampaignCurrency            string                 `protobuf:"bytes,22,opt,name=campaign_currency,json=campaignCurrency,proto3" json:"campaign_currency,omitempty"`
	ExchangeToPublisher         float64                `protobuf:"fixed64,23,opt,name=exchange_to_publisher,json=exchangeToPublisher,proto3" json:"exchange_to_publisher,omitempty"`
	ExchangeToNetwork           float64                `protobuf:"fixed64,24,opt,name=exchange_to_network,json=exchangeToNetwork,proto3" json:"exchange_to_network,omitempty"`
	AdType                      int32                  `protobuf:"varint,25,opt,name=ad_type,json=adType,proto3" json:"ad_type,omitempty"`
	Format                      string                 `protobuf:"bytes,26,opt,name=format,proto3" json:"format,omitempty"`
	Idnetwork                   uint32                 `protobuf:"varint,27,opt,name=idnetwork,proto3" json:"idnetwork,omitempty"`
	ImpressionStatus            uint32                 `protobuf:"varint,28,opt,name=impression_status,json=impressionStatus,proto3" json:"impression_status,omitempty"`
	ImpressionInvalidReason     int32                  `protobuf:"varint,29,opt,name=impression_invalid_reason,json=impressionInvalidReason,proto3" json:"impression_invalid_reason,omitempty"`
	Adblock                     uint32                 `protobuf:"varint,30,opt,name=adblock,proto3" json:"adblock,omitempty"`
	Idoffer                     int64                  `protobuf:"varint,31,opt,name=idoffer,proto3" json:"idoffer,omitempty"`
	IdlandingPage               uint32                 `protobuf:"varint,32,opt,name=idlanding_page,json=idlandingPage,proto3" json:"idlanding_page,omitempty"`
	Position                    uint32                 `protobuf:"varint,33,opt,name=position,proto3" json:"position,omitempty"`
	RegionGeonameId             uint32                 `protobuf:"varint,34,opt,name=region_geoname_id,json=regionGeonameId,proto3" json:"region_geoname_id,omitempty"`
	Idpartner                   uint32                 `protobuf:"varint,35,opt,name=idpartner,proto3" json:"idpartner,omitempty"`
	ClickStatus                 uint32                 `protobuf:"varint,36,opt,name=click_status,json=clickStatus,proto3" json:"click_status,omitempty"`
	ClickInvalidReason          string                 `protobuf:"bytes,37,opt,name=click_invalid_reason,json=clickInvalidReason,proto3" json:"click_invalid_reason,omitempty"`
	ClickAllInvalidReasons      uint32                 `protobuf:"varint,38,opt,name=click_all_invalid_reasons,json=clickAllInvalidReasons,proto3" json:"click_all_invalid_reasons,omitempty"`
	Idgoal                      string                 `protobuf:"bytes,39,opt,name=idgoal,proto3" json:"idgoal,omitempty"`
	RtbTotalTime                uint32                 `protobuf:"varint,40,opt,name=rtb_total_time,json=rtbTotalTime,proto3" json:"rtb_total_time,omitempty"`
	RtbContentSize              float64                `protobuf:"fixed64,41,opt,name=rtb_content_size,json=rtbContentSize,proto3" json:"rtb_content_size,omitempty"`
	BidStatus                   string                 `protobuf:"bytes,42,opt,name=bid_status,json=bidStatus,proto3" json:"bid_status,omitempty"`
	ErrorReason                 string                 `protobuf:"bytes,43,opt,name=error_reason,json=errorReason,proto3" json:"error_reason,omitempty"`
	RtbQueryStatus              bool                   `protobuf:"varint,44,opt,name=rtb_query_status,json=rtbQueryStatus,proto3" json:"rtb_query_status,omitempty"`
	RtbValue                    float64                `protobuf:"fixed64,45,opt,name=rtb_value,json=rtbValue,proto3" json:"rtb_value,omitempty"`
	RtbRequestType              uint32                 `protobuf:"varint,46,opt,name=rtb_request_type,json=rtbRequestType,proto3" json:"rtb_request_type,omitempty"`
	EventType                   AdEventType            `protobuf:"varint,47,opt,name=event_type,json=eventType,proto3,enum=exads.schema.events.AdEventType" json:"event_type,omitempty"`
	UserIp                      string                 `protobuf:"bytes,48,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	CountryOriginal             string                 `protobuf:"bytes,49,opt,name=country_original,json=countryOriginal,proto3" json:"country_original,omitempty"`
	HttpXForwardedFor           string                 `protobuf:"bytes,50,opt,name=http_x_forwarded_for,json=httpXForwardedFor,proto3" json:"http_x_forwarded_for,omitempty"`
	IdproductCategory           uint32                 `protobuf:"varint,51,opt,name=idproduct_category,json=idproductCategory,proto3" json:"idproduct_category,omitempty"`
	PricingModel                uint32                 `protobuf:"varint,52,opt,name=pricing_model,json=pricingModel,proto3" json:"pricing_model,omitempty"`
	Https                       uint32                 `protobuf:"varint,53,opt,name=https,proto3" json:"https,omitempty"`
	ScreenResolution            string                 `protobuf:"bytes,54,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	UserId                      string                 `protobuf:"bytes,55,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UrlHash                     string                 `protobuf:"bytes,56,opt,name=url_hash,json=urlHash,proto3" json:"url_hash,omitempty"`
	RefererSiteHostname         string                 `protobuf:"bytes,57,opt,name=referer_site_hostname,json=refererSiteHostname,proto3" json:"referer_site_hostname,omitempty"`
	ExecutionTime               float64                `protobuf:"fixed64,58,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	VideoEvent                  uint32                 `protobuf:"varint,59,opt,name=video_event,json=videoEvent,proto3" json:"video_event,omitempty"`
	Errorcode                   int32                  `protobuf:"varint,60,opt,name=errorcode,proto3" json:"errorcode,omitempty"`
	ImpId                       string                 `protobuf:"bytes,61,opt,name=imp_id,json=impId,proto3" json:"imp_id,omitempty"`
	BidId                       string                 `protobuf:"bytes,62,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
	HttpCode                    uint32                 `protobuf:"varint,63,opt,name=http_code,json=httpCode,proto3" json:"http_code,omitempty"`
	IdcarrierSource             int32                  `protobuf:"varint,64,opt,name=idcarrier_source,json=idcarrierSource,proto3" json:"idcarrier_source,omitempty"`
	Noscript                    uint32                 `protobuf:"varint,65,opt,name=noscript,proto3" json:"noscript,omitempty"`
	IncognitoMode               uint32                 `protobuf:"varint,66,opt,name=incognito_mode,json=incognitoMode,proto3" json:"incognito_mode,omitempty"`
	TestMode                    uint32                 `protobuf:"varint,67,opt,name=test_mode,json=testMode,proto3" json:"test_mode,omitempty"`
	CityGeonameId               uint32                 `protobuf:"varint,68,opt,name=city_geoname_id,json=cityGeonameId,proto3" json:"city_geoname_id,omitempty"`
	IsTrustedProxy              int32                  `protobuf:"varint,69,opt,name=is_trusted_proxy,json=isTrustedProxy,proto3" json:"is_trusted_proxy,omitempty"`
	Iddatacenter                int32                  `protobuf:"varint,70,opt,name=iddatacenter,proto3" json:"iddatacenter,omitempty"`
	AdblockVer                  string                 `protobuf:"bytes,71,opt,name=adblock_ver,json=adblockVer,proto3" json:"adblock_ver,omitempty"`
	Clickx                      int32                  `protobuf:"varint,72,opt,name=clickx,proto3" json:"clickx,omitempty"`
	Clicky                      int32                  `protobuf:"varint,73,opt,name=clicky,proto3" json:"clicky,omitempty"`
	ContainerResolution         string                 `protobuf:"bytes,74,opt,name=container_resolution,json=containerResolution,proto3" json:"container_resolution,omitempty"`
	ImpressionAllInvalidReasons int64                  `protobuf:"varint,75,opt,name=impression_all_invalid_reasons,json=impressionAllInvalidReasons,proto3" json:"impression_all_invalid_reasons,omitempty"`
	NetacuityProxyDescription   string                 `protobuf:"bytes,76,opt,name=netacuity_proxy_description,json=netacuityProxyDescription,proto3" json:"netacuity_proxy_description,omitempty"`
	NetacuityProxyType          string                 `protobuf:"bytes,77,opt,name=netacuity_proxy_type,json=netacuityProxyType,proto3" json:"netacuity_proxy_type,omitempty"`
	EurToUsd                    float64                `protobuf:"fixed64,78,opt,name=eur_to_usd,json=eurToUsd,proto3" json:"eur_to_usd,omitempty"`
	WpnEvent                    WpnEventType           `protobuf:"varint,79,opt,name=wpn_event,json=wpnEvent,proto3,enum=exads.schema.events.WpnEventType" json:"wpn_event,omitempty"`
	EmailStatus                 int32                  `protobuf:"varint,80,opt,name=email_status,json=emailStatus,proto3" json:"email_status,omitempty"`
	Sub2                        uint32                 `protobuf:"varint,81,opt,name=sub2,proto3" json:"sub2,omitempty"`
	Sub3                        uint32                 `protobuf:"varint,82,opt,name=sub3,proto3" json:"sub3,omitempty"`
	ScriptType                  string                 `protobuf:"bytes,83,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	ScriptName                  string                 `protobuf:"bytes,84,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	ScriptVer                   string                 `protobuf:"bytes,85,opt,name=script_ver,json=scriptVer,proto3" json:"script_ver,omitempty"`
	BrowserVer                  uint32                 `protobuf:"varint,86,opt,name=browser_ver,json=browserVer,proto3" json:"browser_ver,omitempty"`
	Vr                          uint32                 `protobuf:"varint,87,opt,name=vr,proto3" json:"vr,omitempty"`
	Internal                    uint32                 `protobuf:"varint,88,opt,name=internal,proto3" json:"internal,omitempty"`
	Sampling                    uint32                 `protobuf:"varint,89,opt,name=sampling,proto3" json:"sampling,omitempty"`
	NoFunds                     uint32                 `protobuf:"varint,90,opt,name=no_funds,json=noFunds,proto3" json:"no_funds,omitempty"`
	IdresponsiveLayout          uint32                 `protobuf:"varint,91,opt,name=idresponsive_layout,json=idresponsiveLayout,proto3" json:"idresponsive_layout,omitempty"`
	Idmultizone                 uint32                 `protobuf:"varint,92,opt,name=idmultizone,proto3" json:"idmultizone,omitempty"`
	EmailIsp                    uint32                 `protobuf:"varint,93,opt,name=email_isp,json=emailIsp,proto3" json:"email_isp,omitempty"`
	ScriptDetail                uint32                 `protobuf:"varint,94,opt,name=script_detail,json=scriptDetail,proto3" json:"script_detail,omitempty"`
	ScriptVersion               int32                  `protobuf:"varint,95,opt,name=script_version,json=scriptVersion,proto3" json:"script_version,omitempty"`
	ConversionValueEur          float64                `protobuf:"fixed64,96,opt,name=conversion_value_eur,json=conversionValueEur,proto3" json:"conversion_value_eur,omitempty"`
	ConversionValueUsd          float64                `protobuf:"fixed64,97,opt,name=conversion_value_usd,json=conversionValueUsd,proto3" json:"conversion_value_usd,omitempty"`
	IdadvertiserAdType          uint32                 `protobuf:"varint,98,opt,name=idadvertiser_ad_type,json=idadvertiserAdType,proto3" json:"idadvertiser_ad_type,omitempty"`
	Idproxy                     uint32                 `protobuf:"varint,99,opt,name=idproxy,proto3" json:"idproxy,omitempty"`
	AdRequestResult             uint32                 `protobuf:"varint,100,opt,name=ad_request_result,json=adRequestResult,proto3" json:"ad_request_result,omitempty"`
	IdnetworkType               uint32                 `protobuf:"varint,101,opt,name=idnetwork_type,json=idnetworkType,proto3" json:"idnetwork_type,omitempty"`
	RtbInventoryId              string                 `protobuf:"bytes,102,opt,name=rtb_inventory_id,json=rtbInventoryId,proto3" json:"rtb_inventory_id,omitempty"`
	RtbInventoryName            string                 `protobuf:"bytes,103,opt,name=rtb_inventory_name,json=rtbInventoryName,proto3" json:"rtb_inventory_name,omitempty"`
	IdcampaignType              uint32                 `protobuf:"varint,104,opt,name=idcampaign_type,json=idcampaignType,proto3" json:"idcampaign_type,omitempty"`
	RefreshIteration            uint32                 `protobuf:"varint,105,opt,name=refresh_iteration,json=refreshIteration,proto3" json:"refresh_iteration,omitempty"`
	KeyValue_1                  uint32                 `protobuf:"varint,106,opt,name=key_value_1,json=keyValue1,proto3" json:"key_value_1,omitempty"`
	KeyValue_2                  uint32                 `protobuf:"varint,107,opt,name=key_value_2,json=keyValue2,proto3" json:"key_value_2,omitempty"`
	KeyValue_3                  uint32                 `protobuf:"varint,108,opt,name=key_value_3,json=keyValue3,proto3" json:"key_value_3,omitempty"`
	KeyValue_4                  uint32                 `protobuf:"varint,109,opt,name=key_value_4,json=keyValue4,proto3" json:"key_value_4,omitempty"`
	KeyValue_5                  uint32                 `protobuf:"varint,110,opt,name=key_value_5,json=keyValue5,proto3" json:"key_value_5,omitempty"`
	KeyValue_6                  uint32                 `protobuf:"varint,111,opt,name=key_value_6,json=keyValue6,proto3" json:"key_value_6,omitempty"`
	KeyValue_7                  uint32                 `protobuf:"varint,112,opt,name=key_value_7,json=keyValue7,proto3" json:"key_value_7,omitempty"`
	KeyValue_8                  uint32                 `protobuf:"varint,113,opt,name=key_value_8,json=keyValue8,proto3" json:"key_value_8,omitempty"`
	KeyValue_9                  uint32                 `protobuf:"varint,114,opt,name=key_value_9,json=keyValue9,proto3" json:"key_value_9,omitempty"`
	KeyValue_10                 uint32                 `protobuf:"varint,115,opt,name=key_value_10,json=keyValue10,proto3" json:"key_value_10,omitempty"`
	CdnUsage                    uint64                 `protobuf:"varint,116,opt,name=cdn_usage,json=cdnUsage,proto3" json:"cdn_usage,omitempty"`
	BidShadingValue             float32                `protobuf:"fixed32,117,opt,name=bid_shading_value,json=bidShadingValue,proto3" json:"bid_shading_value,omitempty"`
	SecondBestValue             float32                `protobuf:"fixed32,118,opt,name=second_best_value,json=secondBestValue,proto3" json:"second_best_value,omitempty"`
	AuctionFloor                float32                `protobuf:"fixed32,119,opt,name=auction_floor,json=auctionFloor,proto3" json:"auction_floor,omitempty"`
	AuctionCeil                 float32                `protobuf:"fixed32,120,opt,name=auction_ceil,json=auctionCeil,proto3" json:"auction_ceil,omitempty"`
	IdtrafficSource             uint32                 `protobuf:"varint,121,opt,name=idtraffic_source,json=idtrafficSource,proto3" json:"idtraffic_source,omitempty"`
	FallbackPosition            uint32                 `protobuf:"varint,122,opt,name=fallback_position,json=fallbackPosition,proto3" json:"fallback_position,omitempty"`
	AdServingHost               string                 `protobuf:"bytes,123,opt,name=ad_serving_host,json=adServingHost,proto3" json:"ad_serving_host,omitempty"`
	IdrtbErrorReason            uint32                 `protobuf:"varint,124,opt,name=idrtb_error_reason,json=idrtbErrorReason,proto3" json:"idrtb_error_reason,omitempty"`
	ClientHintsUsage            uint32                 `protobuf:"varint,125,opt,name=client_hints_usage,json=clientHintsUsage,proto3" json:"client_hints_usage,omitempty"`
	CustomValue_1               string                 `protobuf:"bytes,126,opt,name=custom_value_1,json=customValue1,proto3" json:"custom_value_1,omitempty"`
	CustomValue_2               string                 `protobuf:"bytes,127,opt,name=custom_value_2,json=customValue2,proto3" json:"custom_value_2,omitempty"`
	CustomValue_3               string                 `protobuf:"bytes,128,opt,name=custom_value_3,json=customValue3,proto3" json:"custom_value_3,omitempty"`
	IsSelfHosted                int32                  `protobuf:"varint,129,opt,name=is_self_hosted,json=isSelfHosted,proto3" json:"is_self_hosted,omitempty"`
	ProxyStatus                 int32                  `protobuf:"varint,130,opt,name=proxy_status,json=proxyStatus,proto3" json:"proxy_status,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *AdEventRequest) Reset() {
	*x = AdEventRequest{}
	mi := &file_adevent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdEventRequest) ProtoMessage() {}

func (x *AdEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adevent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdEventRequest.ProtoReflect.Descriptor instead.
func (*AdEventRequest) Descriptor() ([]byte, []int) {
	return file_adevent_proto_rawDescGZIP(), []int{0}
}

func (x *AdEventRequest) GetDateInt() int32 {
	if x != nil {
		return x.DateInt
	}
	return 0
}

func (x *AdEventRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *AdEventRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AdEventRequest) GetIdlanguage() uint32 {
	if x != nil {
		return x.Idlanguage
	}
	return 0
}

func (x *AdEventRequest) GetSiteHostname() string {
	if x != nil {
		return x.SiteHostname
	}
	return ""
}

func (x *AdEventRequest) GetIdadvertiser() int64 {
	if x != nil {
		return x.Idadvertiser
	}
	return 0
}

func (x *AdEventRequest) GetIdpublisher() int64 {
	if x != nil {
		return x.Idpublisher
	}
	return 0
}

func (x *AdEventRequest) GetIdsite() int64 {
	if x != nil {
		return x.Idsite
	}
	return 0
}

func (x *AdEventRequest) GetIdzone() int64 {
	if x != nil {
		return x.Idzone
	}
	return 0
}

func (x *AdEventRequest) GetIdcategory() uint32 {
	if x != nil {
		return x.Idcategory
	}
	return 0
}

func (x *AdEventRequest) GetIdcampaign() int64 {
	if x != nil {
		return x.Idcampaign
	}
	return 0
}

func (x *AdEventRequest) GetIdvariation() int64 {
	if x != nil {
		return x.Idvariation
	}
	return 0
}

func (x *AdEventRequest) GetIdos() uint32 {
	if x != nil {
		return x.Idos
	}
	return 0
}

func (x *AdEventRequest) GetIdbrowser() uint32 {
	if x != nil {
		return x.Idbrowser
	}
	return 0
}

func (x *AdEventRequest) GetIddevice() uint32 {
	if x != nil {
		return x.Iddevice
	}
	return 0
}

func (x *AdEventRequest) GetIdcarrier() uint32 {
	if x != nil {
		return x.Idcarrier
	}
	return 0
}

func (x *AdEventRequest) GetIdisp() uint32 {
	if x != nil {
		return x.Idisp
	}
	return 0
}

func (x *AdEventRequest) GetSub() uint32 {
	if x != nil {
		return x.Sub
	}
	return 0
}

func (x *AdEventRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AdEventRequest) GetPublisherRate() int32 {
	if x != nil {
		return x.PublisherRate
	}
	return 0
}

func (x *AdEventRequest) GetPublisherCurrency() string {
	if x != nil {
		return x.PublisherCurrency
	}
	return ""
}

func (x *AdEventRequest) GetCampaignCurrency() string {
	if x != nil {
		return x.CampaignCurrency
	}
	return ""
}

func (x *AdEventRequest) GetExchangeToPublisher() float64 {
	if x != nil {
		return x.ExchangeToPublisher
	}
	return 0
}

func (x *AdEventRequest) GetExchangeToNetwork() float64 {
	if x != nil {
		return x.ExchangeToNetwork
	}
	return 0
}

func (x *AdEventRequest) GetAdType() int32 {
	if x != nil {
		return x.AdType
	}
	return 0
}

func (x *AdEventRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *AdEventRequest) GetIdnetwork() uint32 {
	if x != nil {
		return x.Idnetwork
	}
	return 0
}

func (x *AdEventRequest) GetImpressionStatus() uint32 {
	if x != nil {
		return x.ImpressionStatus
	}
	return 0
}

func (x *AdEventRequest) GetImpressionInvalidReason() int32 {
	if x != nil {
		return x.ImpressionInvalidReason
	}
	return 0
}

func (x *AdEventRequest) GetAdblock() uint32 {
	if x != nil {
		return x.Adblock
	}
	return 0
}

func (x *AdEventRequest) GetIdoffer() int64 {
	if x != nil {
		return x.Idoffer
	}
	return 0
}

func (x *AdEventRequest) GetIdlandingPage() uint32 {
	if x != nil {
		return x.IdlandingPage
	}
	return 0
}

func (x *AdEventRequest) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *AdEventRequest) GetRegionGeonameId() uint32 {
	if x != nil {
		return x.RegionGeonameId
	}
	return 0
}

func (x *AdEventRequest) GetIdpartner() uint32 {
	if x != nil {
		return x.Idpartner
	}
	return 0
}

func (x *AdEventRequest) GetClickStatus() uint32 {
	if x != nil {
		return x.ClickStatus
	}
	return 0
}

func (x *AdEventRequest) GetClickInvalidReason() string {
	if x != nil {
		return x.ClickInvalidReason
	}
	return ""
}

func (x *AdEventRequest) GetClickAllInvalidReasons() uint32 {
	if x != nil {
		return x.ClickAllInvalidReasons
	}
	return 0
}

func (x *AdEventRequest) GetIdgoal() string {
	if x != nil {
		return x.Idgoal
	}
	return ""
}

func (x *AdEventRequest) GetRtbTotalTime() uint32 {
	if x != nil {
		return x.RtbTotalTime
	}
	return 0
}

func (x *AdEventRequest) GetRtbContentSize() float64 {
	if x != nil {
		return x.RtbContentSize
	}
	return 0
}

func (x *AdEventRequest) GetBidStatus() string {
	if x != nil {
		return x.BidStatus
	}
	return ""
}

func (x *AdEventRequest) GetErrorReason() string {
	if x != nil {
		return x.ErrorReason
	}
	return ""
}

func (x *AdEventRequest) GetRtbQueryStatus() bool {
	if x != nil {
		return x.RtbQueryStatus
	}
	return false
}

func (x *AdEventRequest) GetRtbValue() float64 {
	if x != nil {
		return x.RtbValue
	}
	return 0
}

func (x *AdEventRequest) GetRtbRequestType() uint32 {
	if x != nil {
		return x.RtbRequestType
	}
	return 0
}

func (x *AdEventRequest) GetEventType() AdEventType {
	if x != nil {
		return x.EventType
	}
	return AdEventType_Unspecified
}

func (x *AdEventRequest) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *AdEventRequest) GetCountryOriginal() string {
	if x != nil {
		return x.CountryOriginal
	}
	return ""
}

func (x *AdEventRequest) GetHttpXForwardedFor() string {
	if x != nil {
		return x.HttpXForwardedFor
	}
	return ""
}

func (x *AdEventRequest) GetIdproductCategory() uint32 {
	if x != nil {
		return x.IdproductCategory
	}
	return 0
}

func (x *AdEventRequest) GetPricingModel() uint32 {
	if x != nil {
		return x.PricingModel
	}
	return 0
}

func (x *AdEventRequest) GetHttps() uint32 {
	if x != nil {
		return x.Https
	}
	return 0
}

func (x *AdEventRequest) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

func (x *AdEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AdEventRequest) GetUrlHash() string {
	if x != nil {
		return x.UrlHash
	}
	return ""
}

func (x *AdEventRequest) GetRefererSiteHostname() string {
	if x != nil {
		return x.RefererSiteHostname
	}
	return ""
}

func (x *AdEventRequest) GetExecutionTime() float64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *AdEventRequest) GetVideoEvent() uint32 {
	if x != nil {
		return x.VideoEvent
	}
	return 0
}

func (x *AdEventRequest) GetErrorcode() int32 {
	if x != nil {
		return x.Errorcode
	}
	return 0
}

func (x *AdEventRequest) GetImpId() string {
	if x != nil {
		return x.ImpId
	}
	return ""
}

func (x *AdEventRequest) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

func (x *AdEventRequest) GetHttpCode() uint32 {
	if x != nil {
		return x.HttpCode
	}
	return 0
}

func (x *AdEventRequest) GetIdcarrierSource() int32 {
	if x != nil {
		return x.IdcarrierSource
	}
	return 0
}

func (x *AdEventRequest) GetNoscript() uint32 {
	if x != nil {
		return x.Noscript
	}
	return 0
}

func (x *AdEventRequest) GetIncognitoMode() uint32 {
	if x != nil {
		return x.IncognitoMode
	}
	return 0
}

func (x *AdEventRequest) GetTestMode() uint32 {
	if x != nil {
		return x.TestMode
	}
	return 0
}

func (x *AdEventRequest) GetCityGeonameId() uint32 {
	if x != nil {
		return x.CityGeonameId
	}
	return 0
}

func (x *AdEventRequest) GetIsTrustedProxy() int32 {
	if x != nil {
		return x.IsTrustedProxy
	}
	return 0
}

func (x *AdEventRequest) GetIddatacenter() int32 {
	if x != nil {
		return x.Iddatacenter
	}
	return 0
}

func (x *AdEventRequest) GetAdblockVer() string {
	if x != nil {
		return x.AdblockVer
	}
	return ""
}

func (x *AdEventRequest) GetClickx() int32 {
	if x != nil {
		return x.Clickx
	}
	return 0
}

func (x *AdEventRequest) GetClicky() int32 {
	if x != nil {
		return x.Clicky
	}
	return 0
}

func (x *AdEventRequest) GetContainerResolution() string {
	if x != nil {
		return x.ContainerResolution
	}
	return ""
}

func (x *AdEventRequest) GetImpressionAllInvalidReasons() int64 {
	if x != nil {
		return x.ImpressionAllInvalidReasons
	}
	return 0
}

func (x *AdEventRequest) GetNetacuityProxyDescription() string {
	if x != nil {
		return x.NetacuityProxyDescription
	}
	return ""
}

func (x *AdEventRequest) GetNetacuityProxyType() string {
	if x != nil {
		return x.NetacuityProxyType
	}
	return ""
}

func (x *AdEventRequest) GetEurToUsd() float64 {
	if x != nil {
		return x.EurToUsd
	}
	return 0
}

func (x *AdEventRequest) GetWpnEvent() WpnEventType {
	if x != nil {
		return x.WpnEvent
	}
	return WpnEventType_UnspecifiedWpnEvtType
}

func (x *AdEventRequest) GetEmailStatus() int32 {
	if x != nil {
		return x.EmailStatus
	}
	return 0
}

func (x *AdEventRequest) GetSub2() uint32 {
	if x != nil {
		return x.Sub2
	}
	return 0
}

func (x *AdEventRequest) GetSub3() uint32 {
	if x != nil {
		return x.Sub3
	}
	return 0
}

func (x *AdEventRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *AdEventRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *AdEventRequest) GetScriptVer() string {
	if x != nil {
		return x.ScriptVer
	}
	return ""
}

func (x *AdEventRequest) GetBrowserVer() uint32 {
	if x != nil {
		return x.BrowserVer
	}
	return 0
}

func (x *AdEventRequest) GetVr() uint32 {
	if x != nil {
		return x.Vr
	}
	return 0
}

func (x *AdEventRequest) GetInternal() uint32 {
	if x != nil {
		return x.Internal
	}
	return 0
}

func (x *AdEventRequest) GetSampling() uint32 {
	if x != nil {
		return x.Sampling
	}
	return 0
}

func (x *AdEventRequest) GetNoFunds() uint32 {
	if x != nil {
		return x.NoFunds
	}
	return 0
}

func (x *AdEventRequest) GetIdresponsiveLayout() uint32 {
	if x != nil {
		return x.IdresponsiveLayout
	}
	return 0
}

func (x *AdEventRequest) GetIdmultizone() uint32 {
	if x != nil {
		return x.Idmultizone
	}
	return 0
}

func (x *AdEventRequest) GetEmailIsp() uint32 {
	if x != nil {
		return x.EmailIsp
	}
	return 0
}

func (x *AdEventRequest) GetScriptDetail() uint32 {
	if x != nil {
		return x.ScriptDetail
	}
	return 0
}

func (x *AdEventRequest) GetScriptVersion() int32 {
	if x != nil {
		return x.ScriptVersion
	}
	return 0
}

func (x *AdEventRequest) GetConversionValueEur() float64 {
	if x != nil {
		return x.ConversionValueEur
	}
	return 0
}

func (x *AdEventRequest) GetConversionValueUsd() float64 {
	if x != nil {
		return x.ConversionValueUsd
	}
	return 0
}

func (x *AdEventRequest) GetIdadvertiserAdType() uint32 {
	if x != nil {
		return x.IdadvertiserAdType
	}
	return 0
}

func (x *AdEventRequest) GetIdproxy() uint32 {
	if x != nil {
		return x.Idproxy
	}
	return 0
}

func (x *AdEventRequest) GetAdRequestResult() uint32 {
	if x != nil {
		return x.AdRequestResult
	}
	return 0
}

func (x *AdEventRequest) GetIdnetworkType() uint32 {
	if x != nil {
		return x.IdnetworkType
	}
	return 0
}

func (x *AdEventRequest) GetRtbInventoryId() string {
	if x != nil {
		return x.RtbInventoryId
	}
	return ""
}

func (x *AdEventRequest) GetRtbInventoryName() string {
	if x != nil {
		return x.RtbInventoryName
	}
	return ""
}

func (x *AdEventRequest) GetIdcampaignType() uint32 {
	if x != nil {
		return x.IdcampaignType
	}
	return 0
}

func (x *AdEventRequest) GetRefreshIteration() uint32 {
	if x != nil {
		return x.RefreshIteration
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_1() uint32 {
	if x != nil {
		return x.KeyValue_1
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_2() uint32 {
	if x != nil {
		return x.KeyValue_2
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_3() uint32 {
	if x != nil {
		return x.KeyValue_3
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_4() uint32 {
	if x != nil {
		return x.KeyValue_4
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_5() uint32 {
	if x != nil {
		return x.KeyValue_5
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_6() uint32 {
	if x != nil {
		return x.KeyValue_6
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_7() uint32 {
	if x != nil {
		return x.KeyValue_7
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_8() uint32 {
	if x != nil {
		return x.KeyValue_8
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_9() uint32 {
	if x != nil {
		return x.KeyValue_9
	}
	return 0
}

func (x *AdEventRequest) GetKeyValue_10() uint32 {
	if x != nil {
		return x.KeyValue_10
	}
	return 0
}

func (x *AdEventRequest) GetCdnUsage() uint64 {
	if x != nil {
		return x.CdnUsage
	}
	return 0
}

func (x *AdEventRequest) GetBidShadingValue() float32 {
	if x != nil {
		return x.BidShadingValue
	}
	return 0
}

func (x *AdEventRequest) GetSecondBestValue() float32 {
	if x != nil {
		return x.SecondBestValue
	}
	return 0
}

func (x *AdEventRequest) GetAuctionFloor() float32 {
	if x != nil {
		return x.AuctionFloor
	}
	return 0
}

func (x *AdEventRequest) GetAuctionCeil() float32 {
	if x != nil {
		return x.AuctionCeil
	}
	return 0
}

func (x *AdEventRequest) GetIdtrafficSource() uint32 {
	if x != nil {
		return x.IdtrafficSource
	}
	return 0
}

func (x *AdEventRequest) GetFallbackPosition() uint32 {
	if x != nil {
		return x.FallbackPosition
	}
	return 0
}

func (x *AdEventRequest) GetAdServingHost() string {
	if x != nil {
		return x.AdServingHost
	}
	return ""
}

func (x *AdEventRequest) GetIdrtbErrorReason() uint32 {
	if x != nil {
		return x.IdrtbErrorReason
	}
	return 0
}

func (x *AdEventRequest) GetClientHintsUsage() uint32 {
	if x != nil {
		return x.ClientHintsUsage
	}
	return 0
}

func (x *AdEventRequest) GetCustomValue_1() string {
	if x != nil {
		return x.CustomValue_1
	}
	return ""
}

func (x *AdEventRequest) GetCustomValue_2() string {
	if x != nil {
		return x.CustomValue_2
	}
	return ""
}

func (x *AdEventRequest) GetCustomValue_3() string {
	if x != nil {
		return x.CustomValue_3
	}
	return ""
}

func (x *AdEventRequest) GetIsSelfHosted() int32 {
	if x != nil {
		return x.IsSelfHosted
	}
	return 0
}

func (x *AdEventRequest) GetProxyStatus() int32 {
	if x != nil {
		return x.ProxyStatus
	}
	return 0
}

type AdEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error         bool                   `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdEventResponse) Reset() {
	*x = AdEventResponse{}
	mi := &file_adevent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdEventResponse) ProtoMessage() {}

func (x *AdEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adevent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdEventResponse.ProtoReflect.Descriptor instead.
func (*AdEventResponse) Descriptor() ([]byte, []int) {
	return file_adevent_proto_rawDescGZIP(), []int{1}
}

func (x *AdEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AdEventResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

var File_adevent_proto protoreflect.FileDescriptor

const file_adevent_proto_rawDesc = "" +
	"\n" +
	"\radevent.proto\x12\x13exads.schema.events\"\xe1$\n" +
	"\x0eAdEventRequest\x12\x19\n" +
	"\bdate_int\x18\x01 \x01(\x05R\adateInt\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\x12\x1e\n" +
	"\n" +
	"idlanguage\x18\x04 \x01(\rR\n" +
	"idlanguage\x12#\n" +
	"\rsite_hostname\x18\x05 \x01(\tR\fsiteHostname\x12\"\n" +
	"\fidadvertiser\x18\x06 \x01(\x03R\fidadvertiser\x12 \n" +
	"\vidpublisher\x18\a \x01(\x03R\vidpublisher\x12\x16\n" +
	"\x06idsite\x18\b \x01(\x03R\x06idsite\x12\x16\n" +
	"\x06idzone\x18\t \x01(\x03R\x06idzone\x12\x1e\n" +
	"\n" +
	"idcategory\x18\n" +
	" \x01(\rR\n" +
	"idcategory\x12\x1e\n" +
	"\n" +
	"idcampaign\x18\v \x01(\x03R\n" +
	"idcampaign\x12 \n" +
	"\vidvariation\x18\f \x01(\x03R\vidvariation\x12\x12\n" +
	"\x04idos\x18\r \x01(\rR\x04idos\x12\x1c\n" +
	"\tidbrowser\x18\x0e \x01(\rR\tidbrowser\x12\x1a\n" +
	"\biddevice\x18\x0f \x01(\rR\biddevice\x12\x1c\n" +
	"\tidcarrier\x18\x10 \x01(\rR\tidcarrier\x12\x14\n" +
	"\x05idisp\x18\x11 \x01(\rR\x05idisp\x12\x10\n" +
	"\x03sub\x18\x12 \x01(\rR\x03sub\x12\x14\n" +
	"\x05value\x18\x13 \x01(\x01R\x05value\x12%\n" +
	"\x0epublisher_rate\x18\x14 \x01(\x05R\rpublisherRate\x12-\n" +
	"\x12publisher_currency\x18\x15 \x01(\tR\x11publisherCurrency\x12+\n" +
	"\x11campaign_currency\x18\x16 \x01(\tR\x10campaignCurrency\x122\n" +
	"\x15exchange_to_publisher\x18\x17 \x01(\x01R\x13exchangeToPublisher\x12.\n" +
	"\x13exchange_to_network\x18\x18 \x01(\x01R\x11exchangeToNetwork\x12\x17\n" +
	"\aad_type\x18\x19 \x01(\x05R\x06adType\x12\x16\n" +
	"\x06format\x18\x1a \x01(\tR\x06format\x12\x1c\n" +
	"\tidnetwork\x18\x1b \x01(\rR\tidnetwork\x12+\n" +
	"\x11impression_status\x18\x1c \x01(\rR\x10impressionStatus\x12:\n" +
	"\x19impression_invalid_reason\x18\x1d \x01(\x05R\x17impressionInvalidReason\x12\x18\n" +
	"\aadblock\x18\x1e \x01(\rR\aadblock\x12\x18\n" +
	"\aidoffer\x18\x1f \x01(\x03R\aidoffer\x12%\n" +
	"\x0eidlanding_page\x18  \x01(\rR\ridlandingPage\x12\x1a\n" +
	"\bposition\x18! \x01(\rR\bposition\x12*\n" +
	"\x11region_geoname_id\x18\" \x01(\rR\x0fregionGeonameId\x12\x1c\n" +
	"\tidpartner\x18# \x01(\rR\tidpartner\x12!\n" +
	"\fclick_status\x18$ \x01(\rR\vclickStatus\x120\n" +
	"\x14click_invalid_reason\x18% \x01(\tR\x12clickInvalidReason\x129\n" +
	"\x19click_all_invalid_reasons\x18& \x01(\rR\x16clickAllInvalidReasons\x12\x16\n" +
	"\x06idgoal\x18' \x01(\tR\x06idgoal\x12$\n" +
	"\x0ertb_total_time\x18( \x01(\rR\frtbTotalTime\x12(\n" +
	"\x10rtb_content_size\x18) \x01(\x01R\x0ertbContentSize\x12\x1d\n" +
	"\n" +
	"bid_status\x18* \x01(\tR\tbidStatus\x12!\n" +
	"\ferror_reason\x18+ \x01(\tR\verrorReason\x12(\n" +
	"\x10rtb_query_status\x18, \x01(\bR\x0ertbQueryStatus\x12\x1b\n" +
	"\trtb_value\x18- \x01(\x01R\brtbValue\x12(\n" +
	"\x10rtb_request_type\x18. \x01(\rR\x0ertbRequestType\x12?\n" +
	"\n" +
	"event_type\x18/ \x01(\x0e2 .exads.schema.events.AdEventTypeR\teventType\x12\x17\n" +
	"\auser_ip\x180 \x01(\tR\x06userIp\x12)\n" +
	"\x10country_original\x181 \x01(\tR\x0fcountryOriginal\x12/\n" +
	"\x14http_x_forwarded_for\x182 \x01(\tR\x11httpXForwardedFor\x12-\n" +
	"\x12idproduct_category\x183 \x01(\rR\x11idproductCategory\x12#\n" +
	"\rpricing_model\x184 \x01(\rR\fpricingModel\x12\x14\n" +
	"\x05https\x185 \x01(\rR\x05https\x12+\n" +
	"\x11screen_resolution\x186 \x01(\tR\x10screenResolution\x12\x17\n" +
	"\auser_id\x187 \x01(\tR\x06userId\x12\x19\n" +
	"\burl_hash\x188 \x01(\tR\aurlHash\x122\n" +
	"\x15referer_site_hostname\x189 \x01(\tR\x13refererSiteHostname\x12%\n" +
	"\x0eexecution_time\x18: \x01(\x01R\rexecutionTime\x12\x1f\n" +
	"\vvideo_event\x18; \x01(\rR\n" +
	"videoEvent\x12\x1c\n" +
	"\terrorcode\x18< \x01(\x05R\terrorcode\x12\x15\n" +
	"\x06imp_id\x18= \x01(\tR\x05impId\x12\x15\n" +
	"\x06bid_id\x18> \x01(\tR\x05bidId\x12\x1b\n" +
	"\thttp_code\x18? \x01(\rR\bhttpCode\x12)\n" +
	"\x10idcarrier_source\x18@ \x01(\x05R\x0fidcarrierSource\x12\x1a\n" +
	"\bnoscript\x18A \x01(\rR\bnoscript\x12%\n" +
	"\x0eincognito_mode\x18B \x01(\rR\rincognitoMode\x12\x1b\n" +
	"\ttest_mode\x18C \x01(\rR\btestMode\x12&\n" +
	"\x0fcity_geoname_id\x18D \x01(\rR\rcityGeonameId\x12(\n" +
	"\x10is_trusted_proxy\x18E \x01(\x05R\x0eisTrustedProxy\x12\"\n" +
	"\fiddatacenter\x18F \x01(\x05R\fiddatacenter\x12\x1f\n" +
	"\vadblock_ver\x18G \x01(\tR\n" +
	"adblockVer\x12\x16\n" +
	"\x06clickx\x18H \x01(\x05R\x06clickx\x12\x16\n" +
	"\x06clicky\x18I \x01(\x05R\x06clicky\x121\n" +
	"\x14container_resolution\x18J \x01(\tR\x13containerResolution\x12C\n" +
	"\x1eimpression_all_invalid_reasons\x18K \x01(\x03R\x1bimpressionAllInvalidReasons\x12>\n" +
	"\x1bnetacuity_proxy_description\x18L \x01(\tR\x19netacuityProxyDescription\x120\n" +
	"\x14netacuity_proxy_type\x18M \x01(\tR\x12netacuityProxyType\x12\x1c\n" +
	"\n" +
	"eur_to_usd\x18N \x01(\x01R\beurToUsd\x12>\n" +
	"\twpn_event\x18O \x01(\x0e2!.exads.schema.events.WpnEventTypeR\bwpnEvent\x12!\n" +
	"\femail_status\x18P \x01(\x05R\vemailStatus\x12\x12\n" +
	"\x04sub2\x18Q \x01(\rR\x04sub2\x12\x12\n" +
	"\x04sub3\x18R \x01(\rR\x04sub3\x12\x1f\n" +
	"\vscript_type\x18S \x01(\tR\n" +
	"scriptType\x12\x1f\n" +
	"\vscript_name\x18T \x01(\tR\n" +
	"scriptName\x12\x1d\n" +
	"\n" +
	"script_ver\x18U \x01(\tR\tscriptVer\x12\x1f\n" +
	"\vbrowser_ver\x18V \x01(\rR\n" +
	"browserVer\x12\x0e\n" +
	"\x02vr\x18W \x01(\rR\x02vr\x12\x1a\n" +
	"\binternal\x18X \x01(\rR\binternal\x12\x1a\n" +
	"\bsampling\x18Y \x01(\rR\bsampling\x12\x19\n" +
	"\bno_funds\x18Z \x01(\rR\anoFunds\x12/\n" +
	"\x13idresponsive_layout\x18[ \x01(\rR\x12idresponsiveLayout\x12 \n" +
	"\vidmultizone\x18\\ \x01(\rR\vidmultizone\x12\x1b\n" +
	"\temail_isp\x18] \x01(\rR\bemailIsp\x12#\n" +
	"\rscript_detail\x18^ \x01(\rR\fscriptDetail\x12%\n" +
	"\x0escript_version\x18_ \x01(\x05R\rscriptVersion\x120\n" +
	"\x14conversion_value_eur\x18` \x01(\x01R\x12conversionValueEur\x120\n" +
	"\x14conversion_value_usd\x18a \x01(\x01R\x12conversionValueUsd\x120\n" +
	"\x14idadvertiser_ad_type\x18b \x01(\rR\x12idadvertiserAdType\x12\x18\n" +
	"\aidproxy\x18c \x01(\rR\aidproxy\x12*\n" +
	"\x11ad_request_result\x18d \x01(\rR\x0fadRequestResult\x12%\n" +
	"\x0eidnetwork_type\x18e \x01(\rR\ridnetworkType\x12(\n" +
	"\x10rtb_inventory_id\x18f \x01(\tR\x0ertbInventoryId\x12,\n" +
	"\x12rtb_inventory_name\x18g \x01(\tR\x10rtbInventoryName\x12'\n" +
	"\x0fidcampaign_type\x18h \x01(\rR\x0eidcampaignType\x12+\n" +
	"\x11refresh_iteration\x18i \x01(\rR\x10refreshIteration\x12\x1e\n" +
	"\vkey_value_1\x18j \x01(\rR\tkeyValue1\x12\x1e\n" +
	"\vkey_value_2\x18k \x01(\rR\tkeyValue2\x12\x1e\n" +
	"\vkey_value_3\x18l \x01(\rR\tkeyValue3\x12\x1e\n" +
	"\vkey_value_4\x18m \x01(\rR\tkeyValue4\x12\x1e\n" +
	"\vkey_value_5\x18n \x01(\rR\tkeyValue5\x12\x1e\n" +
	"\vkey_value_6\x18o \x01(\rR\tkeyValue6\x12\x1e\n" +
	"\vkey_value_7\x18p \x01(\rR\tkeyValue7\x12\x1e\n" +
	"\vkey_value_8\x18q \x01(\rR\tkeyValue8\x12\x1e\n" +
	"\vkey_value_9\x18r \x01(\rR\tkeyValue9\x12 \n" +
	"\fkey_value_10\x18s \x01(\rR\n" +
	"keyValue10\x12\x1b\n" +
	"\tcdn_usage\x18t \x01(\x04R\bcdnUsage\x12*\n" +
	"\x11bid_shading_value\x18u \x01(\x02R\x0fbidShadingValue\x12*\n" +
	"\x11second_best_value\x18v \x01(\x02R\x0fsecondBestValue\x12#\n" +
	"\rauction_floor\x18w \x01(\x02R\fauctionFloor\x12!\n" +
	"\fauction_ceil\x18x \x01(\x02R\vauctionCeil\x12)\n" +
	"\x10idtraffic_source\x18y \x01(\rR\x0fidtrafficSource\x12+\n" +
	"\x11fallback_position\x18z \x01(\rR\x10fallbackPosition\x12&\n" +
	"\x0fad_serving_host\x18{ \x01(\tR\radServingHost\x12,\n" +
	"\x12idrtb_error_reason\x18| \x01(\rR\x10idrtbErrorReason\x12,\n" +
	"\x12client_hints_usage\x18} \x01(\rR\x10clientHintsUsage\x12$\n" +
	"\x0ecustom_value_1\x18~ \x01(\tR\fcustomValue1\x12$\n" +
	"\x0ecustom_value_2\x18\x7f \x01(\tR\fcustomValue2\x12%\n" +
	"\x0ecustom_value_3\x18\x80\x01 \x01(\tR\fcustomValue3\x12%\n" +
	"\x0eis_self_hosted\x18\x81\x01 \x01(\x05R\fisSelfHosted\x12\"\n" +
	"\fproxy_status\x18\x82\x01 \x01(\x05R\vproxyStatus\"A\n" +
	"\x0fAdEventResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05error\x18\x02 \x01(\bR\x05error*\x81\x01\n" +
	"\vAdEventType\x12\x0f\n" +
	"\vUnspecified\x10\x00\x12\x0e\n" +
	"\n" +
	"Impression\x10\x01\x12\t\n" +
	"\x05Click\x10\x02\x12\b\n" +
	"\x04Goal\x10\x03\x12\r\n" +
	"\tVideoView\x10\x04\x12\f\n" +
	"\bVideoHit\x10\x05\x12\a\n" +
	"\x03Rtb\x10\x06\x12\a\n" +
	"\x03Wpn\x10\a\x12\r\n" +
	"\tAdRequest\x10\b*@\n" +
	"\aRtbType\x12\x16\n" +
	"\x12UnspecifiedRtbType\x10\x00\x12\x0e\n" +
	"\n" +
	"Advertiser\x10\x01\x12\r\n" +
	"\tPublisher\x10\x02*[\n" +
	"\fWpnEventType\x12\x19\n" +
	"\x15UnspecifiedWpnEvtType\x10\x00\x12\x11\n" +
	"\rSubscriptions\x10\x01\x12\x13\n" +
	"\x0fUnsubscriptions\x10\x02\x12\b\n" +
	"\x04Sent\x10\x032\xba\x01\n" +
	"\bEventLog\x12S\n" +
	"\x04Send\x12#.exads.schema.events.AdEventRequest\x1a$.exads.schema.events.AdEventResponse\"\x00\x12Y\n" +
	"\n" +
	"SendEvents\x12#.exads.schema.events.AdEventRequest\x1a$.exads.schema.events.AdEventResponse(\x01BBZ\vmain/events\xca\x02\x15Exads\\Protobuf\\Events\xe2\x02\x1aExads\\Protobuf\\GPBMetadatab\x06proto3"

var (
	file_adevent_proto_rawDescOnce sync.Once
	file_adevent_proto_rawDescData []byte
)

func file_adevent_proto_rawDescGZIP() []byte {
	file_adevent_proto_rawDescOnce.Do(func() {
		file_adevent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_adevent_proto_rawDesc), len(file_adevent_proto_rawDesc)))
	})
	return file_adevent_proto_rawDescData
}

var file_adevent_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_adevent_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_adevent_proto_goTypes = []any{
	(AdEventType)(0),        // 0: exads.schema.events.AdEventType
	(RtbType)(0),            // 1: exads.schema.events.RtbType
	(WpnEventType)(0),       // 2: exads.schema.events.WpnEventType
	(*AdEventRequest)(nil),  // 3: exads.schema.events.AdEventRequest
	(*AdEventResponse)(nil), // 4: exads.schema.events.AdEventResponse
}
var file_adevent_proto_depIdxs = []int32{
	0, // 0: exads.schema.events.AdEventRequest.event_type:type_name -> exads.schema.events.AdEventType
	2, // 1: exads.schema.events.AdEventRequest.wpn_event:type_name -> exads.schema.events.WpnEventType
	3, // 2: exads.schema.events.EventLog.Send:input_type -> exads.schema.events.AdEventRequest
	3, // 3: exads.schema.events.EventLog.SendEvents:input_type -> exads.schema.events.AdEventRequest
	4, // 4: exads.schema.events.EventLog.Send:output_type -> exads.schema.events.AdEventResponse
	4, // 5: exads.schema.events.EventLog.SendEvents:output_type -> exads.schema.events.AdEventResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_adevent_proto_init() }
func file_adevent_proto_init() {
	if File_adevent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_adevent_proto_rawDesc), len(file_adevent_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adevent_proto_goTypes,
		DependencyIndexes: file_adevent_proto_depIdxs,
		EnumInfos:         file_adevent_proto_enumTypes,
		MessageInfos:      file_adevent_proto_msgTypes,
	}.Build()
	File_adevent_proto = out.File
	file_adevent_proto_goTypes = nil
	file_adevent_proto_depIdxs = nil
}
